// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


enum ThemeType {
 DEFAULT
 PRO
}

enum ThemeTitle {
  DEFAULT
  PSYCHEDELIC
  ACUSTIC
  POP
}

enum ThemeColor {
  DEFAULT
  RED
  BLUE
  GREEN
  YELLOW
  PINK
  PURPLE
  ORANGE
  BLACK
  WHITE
}


model UserProfile {
   id          String  @id @default(auto()) @map("_id") @db.ObjectId
   userId     String 
    name       String?
    profileUrl String
    artistId String
    image     String?
    coverImage String?
    theme     Theme[]
    bio       String? 
    spotifyUrl String?
    albums    Album[]
    socials   Social[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

}

model Album {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  image       String
  releaseDate String
  albumType   String
  spotifyUrl  String
  userId     String 

  
  profile     UserProfile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId   String @db.ObjectId
}

model Social {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  
  url         String
  icon        String
  userId     String 

  profile     UserProfile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId   String @db.ObjectId
}


model Theme {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  userId     String

  type        ThemeType @default(DEFAULT)
  name       ThemeTitle @default(DEFAULT)
  color       ThemeColor @default(DEFAULT)

  // relations
  profile     UserProfile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId   String @db.ObjectId
}
